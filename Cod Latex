\documentclass[12pt, letterpaper]{article}
\title{The map of Computer Science}
\author{Petcu George Iulian}
\usepackage{tabularx}
\usepackage{minted}

\begin{document}
\maketitle
\tableofcontents



\section{Intro}


\textbf{Computer Science} is the study of computers, computing processes, and information systems. It is a dynamic and ever-evolving field that plays a central role in modern society, powering everything from smartphones and websites to space exploration and artificial intelligence. At its core, Computer Science combines theoretical principles with practical problem-solving skills to design, analyze, and build software and hardware systems.
Down below, we will discover different subfields from Computer Science and explore it's purpose.


\section{Algorithms and Data Structures}
\subsection*{Theory}

\subsection*{Experiment}

\subsection*{Design}

\subsection*{Relations with other subfields}

\subsection*{Major problems}

\subsection*{Influencial figures}

\subsection*{Key forums}

\newpage

\section{Programming Languages}

\subsection*{Theory}

\subsection*{Experiment}

\subsection*{Design}

\subsection*{Relations with other subfields}

\subsection*{Major problems}

\subsection*{Influencial figures}

\subsection*{Key forums}

\newpage

\section{Computer Arhitecture}
\subsection*{Theory}

\subsection*{Experiment}

\subsection*{Design}

\subsection*{Relations with other subfields}

\subsection*{Major problems}

\subsection*{Influencial figures}

\subsection*{Key forums}

\newpage
\section{Operating Systems and Networks}
\subsection*{Theory}

\subsection*{Experiment}

\subsection*{Design}

\subsection*{Relations with other subfields}

\subsection*{Major problems}

\subsection*{Influencial figures}

\subsection*{Key forums}

\newpage

\section{Software Engineering}

\subsection*{Theory}
Ingineria software este domeniul informaticii care se ocupă cu aplicarea unor principii inginerești în dezvoltarea și întreținerea sistemelor software. Fundamentele teoretice provin din informatică, matematică aplicată și știința sistemelor. Elementele centrale includ ciclul de viață al software-ului, metodologii de dezvoltare (ca Waterfall, Agile, DevOps), modele de calitate, specificare formală și validare/verificare.

\subsection*{Experiment}
Cercetarea experimentală în ingineria software constă în evaluarea empirică a proceselor, tehnicilor și instrumentelor software. Aceasta implică studii de caz, experimente controlate și analize cantitative pentru a înțelege ce metode produc software mai fiabil, mai eficient și mai ușor de întreținut. Exemple includ compararea eficienței între TDD (Test-Driven Development) și dezvoltarea clasică sau evaluarea impactului codului open-source asupra colaborării între echipe.

\subsection*{Design}
Designul software este o etapă esențială în dezvoltarea sistemelor informatice, în care se conturează arhitectura generală a aplicației și modul de organizare a componentelor interne. Scopul principal este de a traduce cerințele funcționale și non-funcționale într-o structură clară, coerentă și extensibilă.

Etapele procesului de design includ:
\begin{itemize}
  \item \textbf{Designul arhitectural} – stabilește structura de ansamblu a sistemului și modul în care componentele interacționează între ele. Exemple de arhitecturi includ monolitică, pe straturi (layered), orientată pe servicii (SOA), microservicii sau event-driven.
  \item \textbf{Designul detaliat} – se concentrează pe implementarea efectivă a modulelor, folosind modele de proiectare (design patterns) precum Singleton, Factory, Observer sau MVC (Model-View-Controller).
\end{itemize}

Un instrument esențial în activitatea de design este \textbf{UML (Unified Modeling Language)}, un limbaj grafic standardizat folosit pentru a vizualiza, specifica, construi și documenta elementele unui sistem software. UML oferă o colecție de diagrame care acoperă diferite aspecte ale sistemului:
\begin{itemize}
  \item \textbf{Diagrame de clasă} – descriu structura statică a sistemului prin clase, atribute, metode și relații.
  \item \textbf{Diagrame de secvență} – evidențiază interacțiunile dintre obiecte de-a lungul timpului, utile pentru scenarii concrete.
  \item \textbf{Diagrame de caz de utilizare (use case)} – ilustrează cerințele funcționale din perspectiva utilizatorului și relațiile acestuia cu sistemul.
  \item \textbf{Diagrame de activitate} – modelează fluxul de control și de activități, utile pentru logica proceselor.
  \item \textbf{Diagrame de stare} – arată modul în care un obiect își schimbă starea în funcție de evenimentele primite.
  \item \textbf{Diagrame de componente și de implementare} – sunt folosite pentru a descrie structura fizică a aplicației și a mediului în care aceasta rulează.
\end{itemize}

Utilizarea UML contribuie la claritatea documentației, la o comunicare eficientă între membrii echipei și la o mai bună înțelegere a cerințelor și a soluțiilor propuse. Este un limbaj agnostic față de tehnologie, ceea ce îl face aplicabil într-o varietate de proiecte software, de la aplicații embedded până la sisteme distribuite mari.


\subsection*{Relations with other subfields}
Ingineria software este strâns legată de alte ramuri ale informaticii. De exemplu:
\begin{itemize}
  \item \textbf{Programare}: Fundamentele dezvoltării software se bazează pe concepte de programare, limbaje și paradigme.
  \item \textbf{Sisteme distribuite}: Necesită practici avansate de inginerie software pentru a gestiona complexitatea și scalabilitatea.
  \item \textbf{Inteligență artificială}: Ingineria software este esențială în integrarea sistemelor AI în aplicații reale.
  \item \textbf{Interacțiune om-calculator (HCI)}: Designul centrat pe utilizator este crucial pentru succesul software-ului modern.
\end{itemize}

\subsection*{Major problems}
Printre principalele provocări din ingineria software se numără:
\begin{itemize}
  \item \textbf{Gestionarea complexității}: Sistemele mari devin greu de înțeles și întreținut.
  \item \textbf{Calitatea software-ului}: Asigurarea fiabilității, securității și performanței într-un mediu competitiv.
  \item \textbf{Evoluția cerințelor}: Cerințele utilizatorilor și ale pieței se schimbă rapid.
  \item \textbf{Estimarea costurilor și a duratei de dezvoltare}: Un aspect notoriu de imprevizibil.
\end{itemize}

\subsection*{Influential figures}
Câțiva dintre cei mai importanți pionieri ai domeniului sunt:
\begin{itemize}
  \item \textbf{Margaret Hamilton} – A coordonat dezvoltarea software-ului pentru misiunea Apollo; a popularizat termenul „software engineering”.
  \item \textbf{Barry Boehm} – Autorul modelului Spiral și promotor al conceptului de cost-benefit în dezvoltarea software.
  \item \textbf{Fred Brooks} – Autorul lucrării clasice \emph{The Mythical Man-Month}, care evidențiază dificultățile scalării echipelor software.
  \item \textbf{Grady Booch} – Unul dintre creatorii UML și promotor al metodologiilor orientate pe obiect.
\end{itemize}

\subsection*{Key forums}
Comunitatea de inginerie software are mai multe forumuri esențiale pentru schimbul de cunoștințe:
\begin{itemize}
  \item \textbf{Conferințe}: ICSE (International Conference on Software Engineering), FSE (Foundations of Software Engineering), ASE (Automated Software Engineering).
  \item \textbf{Jurnale}: IEEE Transactions on Software Engineering, Empirical Software Engineering, Journal of Systems and Software.
  \item \textbf{Comunități online}: Stack Overflow, GitHub, Reddit (subreddits precum \texttt{r/softwareengineering}).
\end{itemize}


\newpage
\section{Databases and Information Retrieval}
\subsection*{Theory}

\subsection*{Experiment}

\subsection*{Design}

\subsection*{Relations with other subfields}

\subsection*{Major problems}

\subsection*{Influencial figures}

\subsection*{Key forums}

\newpage
\section{Artificial Intelligence and Robotics}
\subsection*{Theory}

\subsection*{Experiment}

\subsection*{Design}

\subsection*{Relations with other subfields}

\subsection*{Major problems}

\subsection*{Influencial figures}

\subsection*{Key forums}


\newpage
\section{Graphics}

\subsection*{Theory}
Grafica digitală este un domeniu al informaticii care se ocupă cu prelucrarea imaginilor folosind un calculator. Acesta este un domeniu vast, cu impact în multe arii ale informaticii, cât și ale artei.
Printre aceste domenii se numără:
\begin{itemize}
    \item interfața de utilizator, GUI: modul principal în care un utilizator intereacționează cu dispozitiv modern
    
    \item animație și efecte vizuale în filme;
    
    \item modelarea 3D pentru proiectare asistată de calculator (CAD): folosită în multe domenii, printre care film, arhitectură, și industrii industriale(auto, spațială, etc.);

    \item jocuri video, realitate augmentată, realitate virtuală;
    
    \item recunoașterea și prelucrarea imaginilor în inteligența artificială;

    \item vizualizarea datelor științifice și tehnice prin grafice;
\end{itemize}
\bigskip
Astfel, în forma ei cea mai simplă, grafica poate fi clasificată în:
\begin{itemize}
    \item \textbf{grafica raster} – imagini bazate pe pixeli, cea mai comună;
    \item \textbf{grafica vectorială} – imagini descrise prin forme geometrice, deobicei folosită în logo-uri și ilustrații scalabile.
\end{itemize}

\textbf{Randarea} este un termen important în acest domeniu, și reprezintă procesul prin care rezultă o imagine în două dimensiuni prin folosirea a diverse programe din modele 3D și informații adiționale despre lumină, perspectivă, efecte și texturi. 


\subsection*{Experiment}
Experimentele în acest domeniu au de a face cu explorarea a noi moduri de iluminare și randare, pentru avansul spre scene cât mai realiste, și ca consecință optimizarea performanței și a aparaturii. 

În plus, plăcile grafice/video sunt constant în dezvoltare, experimentându-se cu diverse arhitecturi și idei pentru a se adapta la cerințele constant în evoluție ale domeniului(texturi, algoritmi) și a implementa funcțional tehnologiile din spate. 

\bigskip
Un alt câmp experimental este integrarea sistemelor de inteligență artificială în aceste procese de iluminare și eliminare a artefactelor de randare. Spre exemplu,  Nvidia antrenează 24/7 un AI dedicat optimizării tehnologiei sale DLSS de upscaling, care are scopul de a menține o rată continuă de cadre în aplicările randării în timp real.


\subsection*{Design}
Design-ul în grafica pe calculator se referă atât la arhitectura hardware, cât și la aspectele de interfață și experiență de utilizare.

\bigskip
Evoluția GPU-urilor (plăci grafice/video) a fost esențială pentru dezvoltarea randării eficiente. Un GPU modern este capabil să execute calcule paralele la scară largă, prin care face posibilă randarea scenelor complexe, cu tehnologii avansate de iluminare și corecție, cât și randarea în timp real a scenelor în subdomeniile jocurilor video și a realității virtuale/augmentate.

Astfel, design-ul cât mai eficient al acestei componente hardware este un aspect crucial în domeniul graficii digitale.

\bigskip
Pe lângă hardware, design-ul implică și crearea unui mediu de interacțiune om-calculator, prin alegerea culorilor, a layout-ului și a animațiilor, aspect abordat de dezvoltatori în domeniul HCI în orice proiect modern, de la sisteme de operare la aplicațiile pe care acestea le conțin.


\subsection*{Relations with other subfields}
Grafica digitală este un subdomeniu larg, care se leagă de multe subdomenii ale informaticii: 
\begin{itemize}
    \item \textbf{Interacțiunea om-calculator}:  intefețele de utilizator, GUI;
    \item \textbf{Inteligența artificială}: generarea și recunoașterea imaginilor de către AI;
    \item \textbf{Arhitectura calculatoarelor}: pentru randarea grafică mai complexă, în special pentru jocuri video și animație, multe calculatoare moderne folosesc componente dedicate pentru procesarea video, plăci video;
    \item \textbf{Algoritmi și structuri de date}: algoritmii sunt folosiți frecvent în acest domeniu, printre care cei de rasterizare, ray tracing, path tracing;
    \item \textbf{Sisteme de operare}: cu excepția unor cazuri speciale, sistemele de operare moderne (Windows, Mac, Linux, Android) folosesc interfețe grafice.
\end{itemize}

\subsection*{Major problems}
Acest subdomeniu are mai multe provocări curente:
\begin{itemize}
    \item optimizarea costurilor randării in timp real a scenelor din ce în ce mai complexe;
    \item integrarea și optimizarea tehnicilor de iluminare realiste: ray tracing, path tracing;
    \item evoluția tehnicilor de upscaling, prin algoritmi și AI;
    \item reducerea artefactelor produse în urma randării: antialiasing, denoising.
\end{itemize}


\subsection*{Influencial figures}
\begin{itemize}
    \item \textbf{Ivan Sutherland} - considerat tatăl graficii digitale. A introdus concepte foarte importante, printre care modelarea 3D și prima interfață grafică "Sketchpad";
    \item \textbf{Charles Csuri} - un pionier a artei digitale și a animației, fiind persoana care a creat printre primele piese de artă digitală, Sine Curve Man, folosind funcții matematice;
    \item \textbf{Donald P. Greenberg} - un inovator în grafică, Greenberg a scris multe articole în domeniu, și a servit drept mentor și profesor pentru multe alte figuri importante în domeniu;
    \item \textbf{Alvy Ray Smith și Edwin Catmull} - informaticieni și animatori american, co-fondatori Pixar.
\end{itemize}
\subsection*{Key forums}
Grafica digitală este un domeniu foarte activ al informaticii, astfel că există multiple foruri importante:
\begin{itemize}
    \item \textbf{Conferințe}:
    \begin{itemize}
        \item SYSGRAPH, organizată in fiecare an încă din 1974 în America de Nord;
        \item SYSGraph Asia, organizată din 2008 în Asia;
        \item Eurographics, asociație europeană organizatoare de conferințe si evenimente în cadrul graficii digitale.
    \end{itemize}
    
    \item \textbf{Reviste}:
    \begin{itemize}
        \item Computational Visual Media;
        \item IEEE Transactions on Visualization and Computer Graphics;
        \item ACM Transactions on Graphics.
    \end{itemize}  
    
    \item  \textbf{Dimensiunea locală (UVT, Timișoara)}: 
    \begin{itemize}
        \item Profilul de Design Grafic;
        \item Cursuri precum "Prelucrarea imaginilor", "Vedere artificială pentru vehicule" oferite în cadrul facultății de matematică informatică.
    \end{itemize}
\end{itemize}

\newpage

\section{Human–Computer Interaction}

\subsection*{Theory}
Theoretical foundations of HCI include:
\begin{itemize}
  \item Cognitive models (e.g., GOMS, Norman's Action Theory)
  \item Activity Theory for understanding complex interaction contexts
  \item Empirical laws (e.g., Fitts' Law, Hick's Law)
  \item User-Centered Design principles and methodologies
\end{itemize}

\subsection*{Experiment}
Experimental methods in HCI involve:
\begin{itemize}
  \item Usability testing of interactive systems
  \item Field studies (observations, contextual interviews)
  \item Controlled experiments on user performance and behavior
  \item A/B testing in web and mobile applications
\end{itemize}

\subsection*{Design}
Design activities in HCI focus on:
\begin{itemize}
  \item Rapid prototyping (low and high fidelity)
  \item Heuristic evaluation (e.g., Nielsen’s heuristics)
  \item UI/UX design with wireframes, storyboards, and personas
  \item Participatory and inclusive design approaches
\end{itemize}

\subsection*{Relations with other subfields}
\begin{itemize}
  \item \textbf{Artificial Intelligence} – Adaptive interfaces, intelligent agents
  \item \textbf{Computer Graphics} – Visual interfaces, AR/VR systems
  \item \textbf{Software Engineering} – UI frameworks, design patterns (e.g., MVC)
  \item \textbf{Networking} – Interactive distributed and collaborative systems
  \item \textbf{Cognitive Psychology} – Human behavior modeling and interface response
\end{itemize}

\subsection*{Major problems}
\begin{itemize}
  \item \textbf{Accessibility} – How to design for users with disabilities?
  \item \textbf{Natural interaction} – How to achieve intuitive voice, gesture, and eye-based interaction?
  \item \textbf{Virtual and Augmented Reality} – How to minimize discomfort while maximizing immersion?
  \item \textbf{Ethics in HCI} – How to avoid manipulative design (dark patterns)?
  \item \textbf{Explainability} – How to design interfaces that make AI systems transparent?
\end{itemize}

\subsection*{Influential figures}
\begin{itemize}
  \item \textbf{Donald Norman} – Author of “The Design of Everyday Things”
  \item \textbf{Ben Shneiderman} – Introduced direct manipulation and HCI principles
  \item \textbf{Stuart Card} – Co-creator of GOMS model for user interaction
  \item \textbf{Alan Dix} – Renowned researcher in emerging interaction paradigms
  \item \textbf{Yvonne Rogers} – Expert in interaction design and ubiquitous computing
\end{itemize}

\subsection*{Key forums}
\begin{itemize}
  \item \textbf{Major international conferences:}
  \begin{itemize}
    \item CHI – ACM Conference on Human Factors in Computing Systems
    \item UIST – ACM Symposium on User Interface Software and Technology
    \item IUI – International Conference on Intelligent User Interfaces
  \end{itemize}
  \item \textbf{Leading journals:}
  \begin{itemize}
    \item ACM Transactions on Computer–Human Interaction (TOCHI)
    \item Human–Computer Interaction Journal (Taylor \& Francis)
  \end{itemize}
  \item \textbf{Local dimension (University of the West, Timișoara):}
  \begin{itemize}
    \item HCI research groups within the Department of Computer Science, FMI, UVT
    \item Courses such as “Human–Computer Interaction”, “User Experience Design” offered in the Informatics program
  \end{itemize}
\end{itemize}


\newpage
\section{Computational Science}
\subsection*{Theory}

\subsection*{Experiment}

\subsection*{Design}

\subsection*{Relations with other subfields}

\subsection*{Major problems}

\subsection*{Influencial figures}

\subsection*{Key forums}

\newpage
\section{Organizational Informatics}

\subsection*{Theory}
Organizational Informatics (OI) looks at how information systems help people do their jobs and make decisions inside a company.  It treats an organisation as a network of tasks, rules, and data that must stay in sync.  Key ideas are business rules (who can approve what), workflows (how work moves from A to B), and feedback (using data to improve the process).  Effective OI shows clearly where software supports everyday work and where it gets in the way.  In short, it is about matching technology with day-to-day reality so the whole system runs smoothly.

\subsection*{Experiment}
Researchers test OI ideas by watching real companies before and after they install new software.  They collect numbers such as task time, error counts, and user satisfaction, and also run interviews to catch things numbers miss.  Field studies compare different teams or branches to see what practices work well.  A common theme is checking whether promised savings or faster work actually show up. Since every company works differently, researchers look at several organizations to see if their findings still make sense elsewhere.

\subsection*{Design}
Design work in OI starts by mapping the current workflow with a Kanban board—a visual board where tasks move through columns like “To Do”, “In Progress”, and “Done”—or by jotting down a quick list of steps.  The team then asks where software helps and where it slows people down.  They streamline clunky steps, add clear checkpoints, and build quick prototypes so users can test ideas early.  They favor building the system as small, independent pieces that send messages to each other, so changing one piece doesn’t break the rest.  The goal is smoother teamwork and clearer, faster decisions, not automation for its own sake.

\subsection*{Relations with other subfields}
OI borrows from Databases for reliable storage and tracking, and from Software Engineering to turn business rules into code.  It uses AI for dashboards that predict trends and flag risks.  Concepts from Human–Computer Interaction help make enterprise apps usable, while Networking enables remote teams to share the same workflow.  Thus OI sits at the crossroads of tech and management.

\subsection*{Major problems}
\begin{itemize}
  \item \textbf{Old systems linger} – legacy software is costly and risky to replace.
  \item \textbf{Isolated data} – teams can’t access each other’s information, so reports are incomplete.
  \item \textbf{Change resistance} – staff often prefer familiar routines to new digital workflows.
  \item \textbf{Tougher privacy rules} – laws like GDPR raise the bar on storing and sharing data.
  \item \textbf{Device explosion} – IoT and mobile apps make consistency and security harder.
  \item \textbf{ROI is fuzzy} – it’s hard to measure the real payoff of collaboration platforms.
  \item \textbf{Opaque algorithms} – firms must balance transparency with protecting trade secrets.
\end{itemize}

\subsection*{Influential figures}
\begin{itemize}
  \item \textbf{Peter J.\ Denning} – Highlighted the role of information practices within computer science and urged designers to align systems with organisational reality; his work laid the conceptual foundations of OI.
  \item \textbf{Shoshana Zuboff} – Coined “informate” to describe how digital systems both automate work and create new data about that work, reshaping power and control inside firms.
  \item \textbf{Thomas H.\ Davenport} – Popularised business-process re-engineering and analytics-driven management, providing managers with practical templates for data-centred decision-making.
  \item \textbf{Jay R.\ Galbraith} – Developed the STAR model (strategy, structure, processes, rewards, people) that helps organisations match IT capabilities with corporate structure.
  \item \textbf{Andrew McAfee} – Explores how enterprise social platforms, big data, and AI transform collaboration and productivity in large organisations (“Enterprise 2.0”).
\end{itemize}

\subsection*{Key forums}
\begin{itemize}
  \item \textbf{Conferences}
    \begin{itemize}
      \item \textit{ICIS} – International Conference on Information Systems
      \item \textit{ECIS} – European Conference on Information Systems
      \item \textit{ACM SIGMIS‐CPR} – Computers and People Research symposium
    \end{itemize}
  \item \textbf{Journals}
    \begin{itemize}
      \item \textit{MIS Quarterly (MISQ)}
      \item \textit{Journal of the Association for Information Systems (JAIS)}
    \end{itemize}
  \item \textbf{Practitioner outlet}
    \begin{itemize}
      \item \textit{Harvard Business Review} – management insights and case studies
    \end{itemize}
  \item \textbf{Online communities}
    \begin{itemize}
      \item AIS Discussion Board – academic Q\&A
      \item Reddit \texttt{r/InformationSystems} – informal discussion and trend spotting
    \end{itemize}
\end{itemize}

\newpage

\section{Bioinformatics}
\subsection*{Theory}

\subsection*{Experiment}

\subsection*{Design}

\subsection*{Relations with other subfields}

\subsection*{Major problems}

\subsection*{Influencial figures}

\subsection*{Key forums}

\newpage
\end{document}
